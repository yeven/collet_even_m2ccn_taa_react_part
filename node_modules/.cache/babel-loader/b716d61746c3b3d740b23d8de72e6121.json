{"ast":null,"code":"var _jsxFileName = \"/home/even/m2_ccn_taa_gli_project_react/src/components/LoginContainer.js\";\nimport React from 'react';\nimport LoginComponent from './LoginComponent';\nimport { isTSEntityName } from '@babel/types';\n\nclass LoginContainer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isLogged: false,\n      isInTheDB: false,\n      loading: false,\n      name: \"\",\n      password: \"\",\n      users: []\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    fetch(\"/api/users/\").then(response => response.json()).then(data => this.setState({\n      loading: false,\n      users: data\n    }));\n  }\n\n  handleClick() {\n    this.setState({\n      isLogged: true\n    });\n  }\n\n  handleChangeCheckNameInDataBase(event) {\n    const name = event.target.name;\n    this.state.users.map(function (user) {\n      if (user.name === {\n        name\n      }) {\n        this.setState({\n          isInTheDB: true\n        });\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(LoginComponent, {\n      handleClick: this.handleClick,\n      handleChangeCheckNameInDataBase: this.handleChangeCheckNameInDataBase,\n      data: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default LoginContainer;","map":{"version":3,"sources":["/home/even/m2_ccn_taa_gli_project_react/src/components/LoginContainer.js"],"names":["React","LoginComponent","isTSEntityName","LoginContainer","Component","constructor","state","isLogged","isInTheDB","loading","name","password","users","handleClick","bind","componentDidMount","setState","fetch","then","response","json","data","handleChangeCheckNameInDataBase","event","target","map","user","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,cAAT,QAA+B,cAA/B;;AAEA,MAAMC,cAAN,SAA6BH,KAAK,CAACI,SAAnC,CAA4C;AACxCC,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAG,KADF;AAETC,MAAAA,SAAS,EAAG,KAFH;AAGTC,MAAAA,OAAO,EAAG,KAHD;AAITC,MAAAA,IAAI,EAAG,EAJE;AAKTC,MAAAA,QAAQ,EAAG,EALF;AAMTC,MAAAA,KAAK,EAAG;AANC,KAAb;AAQA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,QAAL,CAAc;AAACP,MAAAA,OAAO,EAAG;AAAX,KAAd;AACAQ,IAAAA,KAAK,CAAC,aAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IACR,KAAKL,QAAL,CAAc;AACVP,MAAAA,OAAO,EAAG,KADA;AAEVG,MAAAA,KAAK,EAAGS;AAFE,KAAd,CAHF;AAOH;;AAEDR,EAAAA,WAAW,GAAE;AACT,SAAKG,QAAL,CAAc;AACVT,MAAAA,QAAQ,EAAG;AADD,KAAd;AAGH;;AAEDe,EAAAA,+BAA+B,CAACC,KAAD,EAAO;AAAA,UAE3Bb,IAF2B,GAEnBa,KAAK,CAACC,MAFa,CAE3Bd,IAF2B;AAGlC,SAAKJ,KAAL,CAAWM,KAAX,CAAiBa,GAAjB,CAAqB,UAASC,IAAT,EAAe;AAChC,UAAGA,IAAI,CAAChB,IAAL,KAAc;AAACA,QAAAA;AAAD,OAAjB,EAAwB;AACpB,aAAKM,QAAL,CAAc;AACVR,UAAAA,SAAS,EAAG;AADF,SAAd;AAGH;AACJ,KAND;AASH;;AAEDmB,EAAAA,MAAM,GAAE;AACJ,WACI,oBAAC,cAAD;AACA,MAAA,WAAW,EAAI,KAAKd,WADpB;AAEA,MAAA,+BAA+B,EAAI,KAAKS,+BAFxC;AAGA,MAAA,IAAI,EAAI,KAAKhB,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAQH;;AAtDuC;;AAyD5C,eAAeH,cAAf","sourcesContent":["import React from 'react'\nimport LoginComponent from './LoginComponent'\nimport { isTSEntityName } from '@babel/types'\n\nclass LoginContainer extends React.Component{\n    constructor(){\n        super()\n        this.state = {\n            isLogged : false,\n            isInTheDB : false,\n            loading : false,\n            name : \"\",\n            password : \"\",\n            users : []\n        }\n        this.handleClick = this.handleClick.bind(this)\n    }\n\n    componentDidMount(){\n        this.setState({loading : true})\n        fetch(\"/api/users/\")\n        .then(response => response.json())\n        .then(data => \n          this.setState({\n              loading : false,\n              users : data\n          }))\n    }\n\n    handleClick(){\n        this.setState({\n            isLogged : true\n        })\n    }\n\n    handleChangeCheckNameInDataBase(event){\n\n        const {name} = event.target\n        this.state.users.map(function(user) {\n            if(user.name === {name}){\n                this.setState({\n                    isInTheDB : true\n                })\n            }\n        }\n        )\n\n    }\n\n    render(){\n        return(\n            <LoginComponent \n            handleClick = {this.handleClick}\n            handleChangeCheckNameInDataBase = {this.handleChangeCheckNameInDataBase}\n            data = {this.state}\n            />\n\n        )\n    }\n}\n\nexport default LoginContainer"]},"metadata":{},"sourceType":"module"}